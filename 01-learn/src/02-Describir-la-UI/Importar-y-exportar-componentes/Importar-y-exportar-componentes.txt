Importar y exportar componentes
La magia de los componentes reside en su reusabilidad: puedes crear componentes que se componen a su vez de otros componentes. Pero mientras anidas más y más componentes, a menudo tiene sentido comenzar a separarlos en diferentes archivos. Esto permite que tus archivos se mantengan fáciles de localizar y puedas reutilizar componentes en más lugares.

Aprenderás
Qué es un archivo de componente raíz
Cómo importar y exportar un componente
Cuándo usar imports y exports defaults o con nombre
Cómo importar o exportar múltiples componentes de un archivo
Cómo separar componentes en múltiples archivos

El archivo de componente raíz 
En Tu primer componente, hiciste un componente Profile y un componente Gallery que lo renderiza:

Estos viven actualmente en este ejemplo en un archivo de componente raíz. No obstante, en dependencia de tu configuración, tu componente raíz podría estar en otro archivo. Si utilizas un framework con enrutamiento basado en archivos, como Next.js, tu componente raíz será diferente para cada página.

Exportar e importar un componente

¿Y si quisieras cambiar la pantalla de inicio en el futuro y poner allí una lista de libros científicos? ¿O ubicar todos los perfiles en otro lugar? Tiene sentido mover Gallery y Profile fuera del componente raíz. Esto los haría más modulares y reutilizables en otros archivos. Puedes mover un componente en tres pasos:


Crea un nuevo archivo JS para poner los componentes dentro.

Exporta tu componente de función desde ese archivo (ya sea usando exports por defecto o con nombre).

Impórtalo en el archivo en el que usarás el componente (usando la técnica correspondiente de importar exports por defecto o con nombre).

Nota cómo este ejemplo está ahora descompuesto en dos archivos:

Gallery.jsx

--Importa el componente Profile como un import por nombre.

--Define el componente Gallery como un export por defecto.

Profile.jsx

---Define el componente Profile como un export por nombre.

--Define la imagen

Nota
Puede que te encuentres archivos que omiten la extensión de archivo .js de esta forma:

import Gallery from './Gallery';
Tanto './Gallery.js' como './Gallery' funcionarán con React, aunque la primera forma es más cercana a cómo lo hacen los módulos nativos de ES.

Exportar e importar múltiples componentes del mismo archivo 
¿Y si quisieras mostrar solo un Profile en lugar de toda la galería? Puedes exportar el componente Profile también. Pero Gallery.js ya tiene un export por defecto, y no puedes tener dos exports por defecto. Podrías crear un nuevo archivo con un export por defecto, o podrías añadir un export con nombre para Profile. ¡Un archivo solo puede contener un export por defecto, pero puede tener múltiples exports con nombre!

Para reducir la potencial confusión entre exports por defecto y con nombre, algunos equipos escogen utilizar solo un estilo (por defecto o con nombre), o evitan mezclarlos en un mismo archivo. Es una cuestión de preferencias. ¡Haz lo que funcione mejor para ti!

Ahora estás usando a una mezcla de exports por defecto y con nombre.